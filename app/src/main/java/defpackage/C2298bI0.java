package defpackage;

import android.os.Bundle;
import com.huawei.hms.push.constant.RemoteMessageConst;
import com.huawei.hms.rn.push.constants.NotificationConstants;
import com.huawei.hms.rn.push.constants.RemoteMessageAttributes;
import com.yandex.varioqub.config.model.ConfigValue;
import org.json.JSONException;
import org.json.JSONObject;

/* renamed from: bI0, reason: case insensitive filesystem */
/* loaded from: classes.dex */
public final class C2298bI0 {
    public final String A;
    public final String B;
    public final double C;
    public final double D;
    public final boolean E;
    public final double F;
    public final boolean G;
    public final boolean H;
    public final String I;
    public final String J;
    public final boolean K;
    public final boolean L;
    public final String M;
    public final String a;
    public final String b;
    public final double c;
    public final String d;
    public final String e;
    public final boolean f;
    public final boolean g;
    public final String h;
    public final String i;
    public final String j;
    public final String k;
    public final String l;
    public final String m;
    public final String n;
    public final String o;
    public final String p;
    public final String q;
    public final String r;
    public final String s;
    public final boolean t;
    public final String u;
    public final boolean v;
    public final boolean w;
    public final double x;
    public final String y;
    public final boolean z;

    public C2298bI0(JSONObject jSONObject) {
        try {
            this.a = jSONObject.has(NotificationConstants.ID) ? jSONObject.getString(NotificationConstants.ID) : null;
            this.b = jSONObject.has("message") ? jSONObject.getString("message") : null;
            boolean zHas = jSONObject.has(NotificationConstants.FIRE_DATE);
            double d = ConfigValue.DOUBLE_DEFAULT_VALUE;
            this.c = zHas ? jSONObject.getDouble(NotificationConstants.FIRE_DATE) : 0.0d;
            this.d = jSONObject.has("title") ? jSONObject.getString("title") : null;
            this.e = jSONObject.has("ticker") ? jSONObject.getString("ticker") : null;
            this.f = jSONObject.has(NotificationConstants.SHOW_WHEN) ? jSONObject.getBoolean(NotificationConstants.SHOW_WHEN) : true;
            this.g = jSONObject.has("autoCancel") ? jSONObject.getBoolean("autoCancel") : true;
            this.h = jSONObject.has(NotificationConstants.LARGE_ICON) ? jSONObject.getString(NotificationConstants.LARGE_ICON) : null;
            this.i = jSONObject.has(NotificationConstants.LARGE_ICON_URL) ? jSONObject.getString(NotificationConstants.LARGE_ICON_URL) : null;
            this.j = jSONObject.has(NotificationConstants.SMALL_ICON) ? jSONObject.getString(NotificationConstants.SMALL_ICON) : null;
            this.k = jSONObject.has(NotificationConstants.BIG_TEXT) ? jSONObject.getString(NotificationConstants.BIG_TEXT) : null;
            this.l = jSONObject.has(NotificationConstants.SUB_TEXT) ? jSONObject.getString(NotificationConstants.SUB_TEXT) : null;
            this.m = jSONObject.has(NotificationConstants.BIG_PICTURE_URL) ? jSONObject.getString(NotificationConstants.BIG_PICTURE_URL) : null;
            this.n = jSONObject.has(NotificationConstants.SHORTCUT_ID) ? jSONObject.getString(NotificationConstants.SHORTCUT_ID) : null;
            this.o = jSONObject.has(NotificationConstants.NUMBER) ? jSONObject.getString(NotificationConstants.NUMBER) : null;
            this.p = jSONObject.has("channelId") ? jSONObject.getString("channelId") : null;
            this.q = jSONObject.has("sound") ? jSONObject.getString("sound") : null;
            this.r = jSONObject.has("color") ? jSONObject.getString("color") : null;
            this.s = jSONObject.has(NotificationConstants.GROUP) ? jSONObject.getString(NotificationConstants.GROUP) : null;
            this.t = jSONObject.has(NotificationConstants.GROUP_SUMMARY) ? jSONObject.getBoolean(NotificationConstants.GROUP_SUMMARY) : false;
            this.u = jSONObject.has(RemoteMessageAttributes.MESSAGE_ID) ? jSONObject.getString(RemoteMessageAttributes.MESSAGE_ID) : null;
            this.v = jSONObject.has(NotificationConstants.PLAY_SOUND) ? jSONObject.getBoolean(NotificationConstants.PLAY_SOUND) : true;
            this.w = jSONObject.has(NotificationConstants.VIBRATE) ? jSONObject.getBoolean(NotificationConstants.VIBRATE) : true;
            this.x = jSONObject.has("vibration") ? jSONObject.getDouble("vibration") : 1000.0d;
            this.y = jSONObject.has(NotificationConstants.ACTIONS) ? jSONObject.getString(NotificationConstants.ACTIONS) : null;
            this.z = jSONObject.has(NotificationConstants.INVOKE_APP) ? jSONObject.getBoolean(NotificationConstants.INVOKE_APP) : true;
            this.A = jSONObject.has("tag") ? jSONObject.getString("tag") : null;
            this.B = jSONObject.has(NotificationConstants.REPEAT_TYPE) ? jSONObject.getString(NotificationConstants.REPEAT_TYPE) : null;
            this.C = jSONObject.has(NotificationConstants.REPEAT_TIME) ? jSONObject.getDouble(NotificationConstants.REPEAT_TIME) : d;
            this.D = jSONObject.has(RemoteMessageConst.Notification.WHEN) ? jSONObject.getDouble(RemoteMessageConst.Notification.WHEN) : -1.0d;
            this.E = jSONObject.has("usesChronometer") ? jSONObject.getBoolean("usesChronometer") : false;
            this.F = jSONObject.has("timeoutAfter") ? jSONObject.getDouble("timeoutAfter") : -1.0d;
            this.G = jSONObject.has(NotificationConstants.ONLY_ALERT_ONCE) ? jSONObject.getBoolean(NotificationConstants.ONLY_ALERT_ONCE) : false;
            this.H = jSONObject.has(NotificationConstants.ONGOING) ? jSONObject.getBoolean(NotificationConstants.ONGOING) : false;
            this.I = jSONObject.has("reply_button_text") ? jSONObject.getString("reply_button_text") : null;
            this.J = jSONObject.has("reply_placeholder_text") ? jSONObject.getString("reply_placeholder_text") : null;
            this.K = jSONObject.has(NotificationConstants.ALLOW_WHILE_IDLE) ? jSONObject.getBoolean(NotificationConstants.ALLOW_WHILE_IDLE) : false;
            this.L = jSONObject.has("ignoreInForeground") ? jSONObject.getBoolean("ignoreInForeground") : false;
            this.M = jSONObject.has("userInfo") ? jSONObject.getString("userInfo") : null;
        } catch (JSONException e) {
            throw new IllegalStateException("Exception while initializing RNPushNotificationAttributes from JSON", e);
        }
    }

    public final Bundle a() {
        Bundle bundle = new Bundle();
        bundle.putString(NotificationConstants.ID, this.a);
        bundle.putString("message", this.b);
        bundle.putDouble(NotificationConstants.FIRE_DATE, this.c);
        bundle.putString("title", this.d);
        bundle.putString("ticker", this.e);
        bundle.putBoolean(NotificationConstants.SHOW_WHEN, this.f);
        bundle.putBoolean("autoCancel", this.g);
        bundle.putString(NotificationConstants.LARGE_ICON, this.h);
        bundle.putString(NotificationConstants.LARGE_ICON_URL, this.i);
        bundle.putString(NotificationConstants.SMALL_ICON, this.j);
        bundle.putString(NotificationConstants.BIG_TEXT, this.k);
        bundle.putString(NotificationConstants.SUB_TEXT, this.l);
        bundle.putString(NotificationConstants.BIG_PICTURE_URL, this.m);
        bundle.putString(NotificationConstants.SHORTCUT_ID, this.n);
        bundle.putString(NotificationConstants.NUMBER, this.o);
        bundle.putString("channelId", this.p);
        bundle.putString("sound", this.q);
        bundle.putString("color", this.r);
        bundle.putString(NotificationConstants.GROUP, this.s);
        bundle.putBoolean(NotificationConstants.GROUP_SUMMARY, this.t);
        bundle.putString(RemoteMessageAttributes.MESSAGE_ID, this.u);
        bundle.putBoolean(NotificationConstants.PLAY_SOUND, this.v);
        bundle.putBoolean(NotificationConstants.VIBRATE, this.w);
        bundle.putDouble("vibration", this.x);
        bundle.putString(NotificationConstants.ACTIONS, this.y);
        bundle.putBoolean(NotificationConstants.INVOKE_APP, this.z);
        bundle.putString("tag", this.A);
        bundle.putString(NotificationConstants.REPEAT_TYPE, this.B);
        bundle.putDouble(NotificationConstants.REPEAT_TIME, this.C);
        bundle.putDouble(RemoteMessageConst.Notification.WHEN, this.D);
        bundle.putBoolean("usesChronometer", this.E);
        bundle.putDouble("timeoutAfter", this.F);
        bundle.putBoolean(NotificationConstants.ONLY_ALERT_ONCE, this.G);
        bundle.putBoolean(NotificationConstants.ONGOING, this.H);
        bundle.putString("reply_button_text", this.I);
        bundle.putString("reply_placeholder_text", this.J);
        bundle.putBoolean(NotificationConstants.ALLOW_WHILE_IDLE, this.K);
        bundle.putBoolean("ignoreInForeground", this.L);
        bundle.putString("userInfo", this.M);
        return bundle;
    }

    public final String toString() {
        StringBuilder sb = new StringBuilder("RNPushNotificationAttributes{id='");
        sb.append(this.a);
        sb.append("', message='");
        sb.append(this.b);
        sb.append("', fireDate=");
        sb.append(this.c);
        sb.append(", title='");
        sb.append(this.d);
        sb.append("', ticker='");
        sb.append(this.e);
        sb.append("', showWhen=");
        sb.append(this.f);
        sb.append(", autoCancel=");
        sb.append(this.g);
        sb.append(", largeIcon='");
        sb.append(this.h);
        sb.append("', largeIconUrl='");
        sb.append(this.i);
        sb.append("', smallIcon='");
        sb.append(this.j);
        sb.append("', bigText='");
        sb.append(this.k);
        sb.append("', subText='");
        sb.append(this.l);
        sb.append("', bigPictureUrl='");
        sb.append(this.m);
        sb.append("', shortcutId='");
        sb.append(this.n);
        sb.append("', number='");
        sb.append(this.o);
        sb.append("', channelId='");
        sb.append(this.p);
        sb.append("', sound='");
        sb.append(this.q);
        sb.append("', color='");
        sb.append(this.r);
        sb.append("', group='");
        sb.append(this.s);
        sb.append("', groupSummary='");
        sb.append(this.t);
        sb.append("', messageId='");
        sb.append(this.u);
        sb.append("', playSound=");
        sb.append(this.v);
        sb.append(", vibrate=");
        sb.append(this.w);
        sb.append(", vibration=");
        sb.append(this.x);
        sb.append(", actions='");
        sb.append(this.y);
        sb.append("', invokeApp=");
        sb.append(this.z);
        sb.append(", tag='");
        sb.append(this.A);
        sb.append("', repeatType='");
        sb.append(this.B);
        sb.append("', repeatTime=");
        sb.append(this.C);
        sb.append(", when=");
        sb.append(this.D);
        sb.append(", usesChronometer=");
        sb.append(this.E);
        sb.append(", timeoutAfter=");
        sb.append(this.F);
        sb.append(", onlyAlertOnce=");
        sb.append(this.G);
        sb.append(", ongoing=");
        sb.append(this.H);
        sb.append(", reply_button_text=");
        sb.append(this.I);
        sb.append(", reply_placeholder_text=");
        sb.append(this.J);
        sb.append(", allowWhileIdle=");
        sb.append(this.K);
        sb.append(", ignoreInForeground=");
        sb.append(this.L);
        sb.append(", userInfo=");
        return F91.v(sb, this.M, '}');
    }
}
