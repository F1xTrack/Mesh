package defpackage;

import com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;
import kotlin.KotlinVersion;
import kotlin.Pair;

/* renamed from: Ku, reason: case insensitive filesystem */
/* loaded from: classes2.dex */
public abstract class AbstractC0860Ku {
    public static final LinkedHashMap a;

    /* JADX WARN: Type inference failed for: r11v12, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r11v14, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r11v16, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r11v18, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r11v20, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r13v176, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r14v126, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r14v130, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r14v137, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r15v183, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r15v184, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r15v185, types: [java.io.Serializable, java.lang.Integer[]] */
    /* JADX WARN: Type inference failed for: r5v4, types: [java.io.Serializable, java.lang.Integer[]] */
    static {
        Integer numValueOf = Integer.valueOf(KotlinVersion.MAX_COMPONENT_VALUE);
        Map mapH = AbstractC7096sn0.h(new Pair("aliceblue", new Integer[]{240, 248, numValueOf, numValueOf}), new Pair("antiquewhite", new Integer[]{250, 235, 215, numValueOf}), new Pair("aqua", new Integer[]{0, numValueOf, numValueOf, numValueOf}), new Pair("aquamarine", new Integer[]{127, numValueOf, 212, numValueOf}), new Pair("azure", new Integer[]{240, numValueOf, numValueOf, numValueOf}), new Pair("beige", new Integer[]{245, 245, 220, numValueOf}), new Pair("bisque", new Integer[]{numValueOf, 228, 196, numValueOf}), new Pair("black", new Integer[]{0, 0, 0, numValueOf}), new Pair("blanchedalmond", new Integer[]{numValueOf, 235, 205, numValueOf}), new Pair("blue", new Integer[]{0, 0, numValueOf, numValueOf}), new Pair("blueviolet", new Integer[]{138, 43, 226, numValueOf}), new Pair("brown", new Integer[]{165, 42, 42, numValueOf}), new Pair("burlywood", new Integer[]{222, 184, 135, numValueOf}), new Pair("cadetblue", new Integer[]{95, 158, 160, numValueOf}), new Pair("chartreuse", new Integer[]{127, numValueOf, 0, numValueOf}), new Pair("chocolate", new Integer[]{210, 105, 30, numValueOf}), new Pair("coral", new Integer[]{numValueOf, 127, 80, numValueOf}), new Pair("cornflowerblue", new Integer[]{100, 149, 237, numValueOf}), new Pair("cornsilk", new Integer[]{numValueOf, 248, 220, numValueOf}), new Pair("crimson", new Integer[]{220, 20, 60, numValueOf}), new Pair("cyan", new Integer[]{0, numValueOf, numValueOf, numValueOf}), new Pair("darkblue", new Integer[]{0, 0, 139, numValueOf}), new Pair("darkcyan", new Integer[]{0, 139, 139, numValueOf}), new Pair("darkgoldenrod", new Integer[]{184, 134, 11, numValueOf}), new Pair("darkgray", new Integer[]{169, 169, 169, numValueOf}), new Pair("darkgreen", new Integer[]{0, 100, 0, numValueOf}), new Pair("darkgrey", new Integer[]{169, 169, 169, numValueOf}), new Pair("darkkhaki", new Integer[]{189, 183, 107, numValueOf}), new Pair("darkmagenta", new Integer[]{139, 0, 139, numValueOf}), new Pair("darkolivegreen", new Integer[]{85, 107, 47, numValueOf}), new Pair("darkorange", new Integer[]{numValueOf, 140, 0, numValueOf}), new Pair("darkorchid", new Integer[]{153, 50, 204, numValueOf}), new Pair("darkred", new Integer[]{139, 0, 0, numValueOf}), new Pair("darksalmon", new Integer[]{233, 150, 122, numValueOf}), new Pair("darkseagreen", new Integer[]{143, 188, 143, numValueOf}), new Pair("darkslateblue", new Integer[]{72, 61, 139, numValueOf}), new Pair("darkslategray", new Integer[]{47, 79, 79, numValueOf}), new Pair("darkslategrey", new Integer[]{47, 79, 79, numValueOf}), new Pair("darkturquoise", new Integer[]{0, 206, 209, numValueOf}), new Pair("darkviolet", new Integer[]{148, 0, 211, numValueOf}), new Pair("deeppink", new Integer[]{numValueOf, 20, 147, numValueOf}), new Pair("deepskyblue", new Integer[]{0, 191, numValueOf, numValueOf}), new Pair("dimgray", new Integer[]{105, 105, 105, numValueOf}), new Pair("dimgrey", new Integer[]{105, 105, 105, numValueOf}), new Pair("dodgerblue", new Integer[]{30, 144, numValueOf, numValueOf}), new Pair("firebrick", new Integer[]{178, 34, 34, numValueOf}), new Pair("floralwhite", new Integer[]{numValueOf, 250, 240, numValueOf}), new Pair("forestgreen", new Integer[]{34, 139, 34, numValueOf}), new Pair("fuchsia", new Integer[]{numValueOf, 0, numValueOf, numValueOf}), new Pair("gainsboro", new Integer[]{220, 220, 220, numValueOf}), new Pair("ghostwhite", new Integer[]{248, 248, numValueOf, numValueOf}), new Pair("gold", new Integer[]{numValueOf, 215, 0, numValueOf}), new Pair("goldenrod", new Integer[]{218, 165, 32, numValueOf}), new Pair("gray", new Integer[]{128, 128, 128, numValueOf}), new Pair("green", new Integer[]{0, 128, 0, numValueOf}), new Pair("greenyellow", new Integer[]{173, numValueOf, 47, numValueOf}), new Pair("grey", new Integer[]{128, 128, 128, numValueOf}), new Pair("honeydew", new Integer[]{240, numValueOf, 240, numValueOf}), new Pair("hotpink", new Integer[]{numValueOf, 105, 180, numValueOf}), new Pair("indianred", new Integer[]{205, 92, 92, numValueOf}), new Pair("indigo", new Integer[]{75, 0, 130, numValueOf}), new Pair("ivory", new Integer[]{numValueOf, numValueOf, 240, numValueOf}), new Pair("khaki", new Integer[]{240, 230, 140, numValueOf}), new Pair("lavender", new Integer[]{230, 230, 250, numValueOf}), new Pair("lavenderblush", new Integer[]{numValueOf, 240, 245, numValueOf}), new Pair("lawngreen", new Integer[]{124, 252, 0, numValueOf}), new Pair("lemonchiffon", new Integer[]{numValueOf, 250, 205, numValueOf}), new Pair("lightblue", new Integer[]{173, 216, 230, numValueOf}), new Pair("lightcoral", new Integer[]{240, 128, 128, numValueOf}), new Pair("lightcyan", new Integer[]{224, numValueOf, numValueOf, numValueOf}), new Pair("lightgoldenrodyellow", new Integer[]{250, 250, 210, numValueOf}), new Pair("lightgray", new Integer[]{211, 211, 211, numValueOf}), new Pair("lightgreen", new Integer[]{144, 238, 144, numValueOf}), new Pair("lightgrey", new Integer[]{211, 211, 211, numValueOf}), new Pair("lightpink", new Integer[]{numValueOf, 182, 193, numValueOf}), new Pair("lightsalmon", new Integer[]{numValueOf, 160, 122, numValueOf}), new Pair("lightseagreen", new Integer[]{32, 178, 170, numValueOf}), new Pair("lightskyblue", new Integer[]{135, 206, 250, numValueOf}), new Pair("lightslategray", new Integer[]{119, Integer.valueOf(ModuleDescriptor.MODULE_VERSION), 153, numValueOf}), new Pair("lightslategrey", new Integer[]{119, Integer.valueOf(ModuleDescriptor.MODULE_VERSION), 153, numValueOf}), new Pair("lightsteelblue", new Integer[]{176, 196, 222, numValueOf}), new Pair("lightyellow", new Integer[]{numValueOf, numValueOf, 224, numValueOf}), new Pair("lime", new Integer[]{0, numValueOf, 0, numValueOf}), new Pair("limegreen", new Integer[]{50, 205, 50, numValueOf}), new Pair("linen", new Integer[]{250, 240, 230, numValueOf}), new Pair("magenta", new Integer[]{numValueOf, 0, numValueOf, numValueOf}), new Pair("maroon", new Integer[]{128, 0, 0, numValueOf}), new Pair("mediumaquamarine", new Integer[]{102, 205, 170, numValueOf}), new Pair("mediumblue", new Integer[]{0, 0, 205, numValueOf}), new Pair("mediumorchid", new Integer[]{186, 85, 211, numValueOf}), new Pair("mediumpurple", new Integer[]{147, 112, 219, numValueOf}), new Pair("mediumseagreen", new Integer[]{60, 179, 113, numValueOf}), new Pair("mediumslateblue", new Integer[]{123, 104, 238, numValueOf}), new Pair("mediumspringgreen", new Integer[]{0, 250, 154, numValueOf}), new Pair("mediumturquoise", new Integer[]{72, 209, 204, numValueOf}), new Pair("mediumvioletred", new Integer[]{199, 21, 133, numValueOf}), new Pair("midnightblue", new Integer[]{25, 25, 112, numValueOf}), new Pair("mintcream", new Integer[]{245, numValueOf, 250, numValueOf}), new Pair("mistyrose", new Integer[]{numValueOf, 228, 225, numValueOf}), new Pair("moccasin", new Integer[]{numValueOf, 228, 181, numValueOf}), new Pair("navajowhite", new Integer[]{numValueOf, 222, 173, numValueOf}), new Pair("navy", new Integer[]{0, 0, 128, numValueOf}), new Pair("oldlace", new Integer[]{253, 245, 230, numValueOf}), new Pair("olive", new Integer[]{128, 128, 0, numValueOf}), new Pair("olivedrab", new Integer[]{107, 142, 35, numValueOf}), new Pair("orange", new Integer[]{numValueOf, 165, 0, numValueOf}), new Pair("orangered", new Integer[]{numValueOf, 69, 0, numValueOf}), new Pair("orchid", new Integer[]{218, 112, 214, numValueOf}), new Pair("palegoldenrod", new Integer[]{238, 232, 170, numValueOf}), new Pair("palegreen", new Integer[]{152, 251, 152, numValueOf}), new Pair("paleturquoise", new Integer[]{175, 238, 238, numValueOf}), new Pair("palevioletred", new Integer[]{219, 112, 147, numValueOf}), new Pair("papayawhip", new Integer[]{numValueOf, 239, 213, numValueOf}), new Pair("peachpuff", new Integer[]{numValueOf, 218, 185, numValueOf}), new Pair("peru", new Integer[]{205, 133, 63, numValueOf}), new Pair("pink", new Integer[]{numValueOf, 192, 203, numValueOf}), new Pair("plum", new Integer[]{221, 160, 221, numValueOf}), new Pair("powderblue", new Integer[]{176, 224, 230, numValueOf}), new Pair("purple", new Integer[]{128, 0, 128, numValueOf}), new Pair("rebeccapurple", new Integer[]{102, 51, 153, numValueOf}), new Pair("red", new Integer[]{numValueOf, 0, 0, numValueOf}), new Pair("rosybrown", new Integer[]{188, 143, 143, numValueOf}), new Pair("royalblue", new Integer[]{65, 105, 225, numValueOf}), new Pair("saddlebrown", new Integer[]{139, 69, 19, numValueOf}), new Pair("salmon", new Integer[]{250, 128, 114, numValueOf}), new Pair("sandybrown", new Integer[]{244, 164, 96, numValueOf}), new Pair("seagreen", new Integer[]{46, 139, 87, numValueOf}), new Pair("seashell", new Integer[]{numValueOf, 245, 238, numValueOf}), new Pair("sienna", new Integer[]{160, 82, 45, numValueOf}), new Pair("silver", new Integer[]{192, 192, 192, numValueOf}), new Pair("skyblue", new Integer[]{135, 206, 235, numValueOf}), new Pair("slateblue", new Integer[]{106, 90, 205, numValueOf}), new Pair("slategray", new Integer[]{112, 128, 144, numValueOf}), new Pair("slategrey", new Integer[]{112, 128, 144, numValueOf}), new Pair("snow", new Integer[]{numValueOf, 250, 250, numValueOf}), new Pair("springgreen", new Integer[]{0, numValueOf, 127, numValueOf}), AbstractC2350bZ1.b("steelblue", new Integer[]{70, 130, 180, numValueOf}), AbstractC2350bZ1.b("tan", new Integer[]{210, 180, 140, numValueOf}), AbstractC2350bZ1.b("teal", new Integer[]{0, 128, 128, numValueOf}), AbstractC2350bZ1.b("thistle", new Integer[]{216, 191, 216, numValueOf}), AbstractC2350bZ1.b("tomato", new Integer[]{numValueOf, 99, 71, numValueOf}), AbstractC2350bZ1.b("transparent", new Integer[]{0, 0, 0, 0}), AbstractC2350bZ1.b("turquoise", new Integer[]{64, 224, 208, numValueOf}), AbstractC2350bZ1.b("violet", new Integer[]{238, 130, 238, numValueOf}), AbstractC2350bZ1.b("wheat", new Integer[]{245, 222, 179, numValueOf}), AbstractC2350bZ1.b("white", new Integer[]{numValueOf, numValueOf, numValueOf, numValueOf}), AbstractC2350bZ1.b("whitesmoke", new Integer[]{245, 245, 245, numValueOf}), AbstractC2350bZ1.b("yellow", new Integer[]{numValueOf, numValueOf, 0, numValueOf}), AbstractC2350bZ1.b("yellowgreen", new Integer[]{154, 205, 50, numValueOf}));
        LinkedHashMap linkedHashMap = new LinkedHashMap(AbstractC7287tn0.b(mapH.size()));
        for (Map.Entry entry : mapH.entrySet()) {
            Object key = entry.getKey();
            Integer[] numArr = (Integer[]) entry.getValue();
            ArrayList arrayList = new ArrayList(numArr.length);
            for (Integer num : numArr) {
                arrayList.add(Float.valueOf(num.intValue() / 255.0f));
            }
            linkedHashMap.put(key, arrayList);
        }
        a = linkedHashMap;
    }
}
